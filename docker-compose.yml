version: "3.7"
services:
  # The bot itself, record into raw, unusable files
  pandora:
    # image: sotrx/pandora:2.4.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pandora
    restart: always
    environment:
      # Discord bot token
      - PANDORA_TOKEN=MTA4ODEzMzk4NTI3Nzg0OTY3MA.GOtxJz.uKbG341YWWRAyCDVqTOpZ-LhCITkqIKi23Ywzw
      - COMMAND_PREFIX=!
      - STORE_NAME=statestore
      - OBJECT_STORE_NAME=object-store-local
      - DISABLE_INTERACTION=true
      - PUBSUB_NAME=pubsub
      - DAPR_HTTP_PORT=3500
      - DAPR_SERVER_PORT=50051
    volumes:
      - pandora_recordings:/rec
    networks:
      - discord_recordings
  # Dapr sidecar, defining runtime implementations
  pandora-dapr:
    image: "daprio/daprd:edge"
    command:
      [
        "./daprd",
        "-app-id",
        "pandora",
        "-app-port",
        "50051",
        "-dapr-grpc-port",
        "50002",
        "-components-path",
        "/components",
      ]
    # In docker-compose, you have to provide components by sharing a volume
    # this is the dapr/components directory
    volumes:
      - "./components/:/components"
    depends_on:
      - pandora
    network_mode: "service:pandora"

  # Converts the raw files into audio files
  pandora-cooking-server:
    image: sotrx/pandora-cooking-server:2.4.4
    container_name: pandora-cooking-server
    ports:
      - "3004:3004"
    restart: always
    volumes:
      - pandora_recordings:/app/rec
    networks:
      - discord_recordings

  # State store
  redis:
    image: "redis:alpine"
    networks:
      - discord_recordings

# Storing the recordings
volumes:
  pandora_recordings:

# Default docker network doesn't always provide name resolution
# so we create a new one
networks:
  discord_recordings:
